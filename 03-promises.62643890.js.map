{"mappings":"igBAGMA,EAAO,CACXC,KAAMC,SAASC,cAAe,SAC9BC,OAAQF,SAASC,cAAe,qBAChCE,OAAQH,SAASC,cAAe,oBAChCG,OAAQJ,SAASC,cAAe,uBAQlC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,SAASQ,EAAaC,GACpBA,EAAEC,iBAMF,IAJA,IAAIC,EAAQC,SAASrB,EAAKI,OAAOkB,OAC3BC,EAAOF,SAASrB,EAAKK,OAAOiB,OAC5BE,EAASH,SAASrB,EAAKM,OAAOgB,OAE3BG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDlB,EAAckB,EAAUL,GACrBM,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAAC,OAAOC,KAAK,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAE3DuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAAC,OAAOC,KAAK,sBAAqCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAG3DW,GAASG,C,CAnCbvB,EAAKC,KAAKgC,iBAAiB,SAAUhB,GACrCjB,EAAKI,OAAO6B,iBAAiB,SAAUhB,GACvCjB,EAAKK,OAAO4B,iBAAiB,SAAUhB,GACvCjB,EAAKM,OAAO2B,iBAAiB,SAAUhB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import '../css/common.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector(`.form`),\n  inputD: document.querySelector(`input[name=delay]`),\n  inputS: document.querySelector(`input[name=step]`),\n  inputA: document.querySelector(`input[name=amount]`),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\nrefs.inputD.addEventListener('submit', onFormSubmit);\nrefs.inputS.addEventListener('submit', onFormSubmit);\nrefs.inputA.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let delay = parseInt(refs.inputD.value);\n  const step = parseInt(refs.inputS.value);\n  const amount = parseInt(refs.inputA.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.info(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.info(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$refs","form","document","querySelector","inputD","inputS","inputA","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$onFormSubmit","e","preventDefault","delay1","parseInt","value","step","amount","position1","then","param","$h6c0i","Notify","info","concat","catch","addEventListener"],"version":3,"file":"03-promises.62643890.js.map"}